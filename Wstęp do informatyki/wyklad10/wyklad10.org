#+title: Wyklad10, złożoność obliczeniowa algorytmów

* DLL TSP
=Nazwisko_Imię_GRXXX.dll=
- Tabelka eksportu :: =FindRoad=.

A nie:
- =_FindRoad=
- =_FindRoad@12=
- =FindRoad@12=

Przed deklracją funkcji exportowej
=extern "C" void __stdcall FindRoad=...
- w zależności od kompilatora =__stdcall= trzeba wywalić.

=tdumb -ee nazwa.dll=
* Złożoność obliczeniowa algorytmów
** Złożoność pamięciowa

** Złożoność czasowa
Jak szybko rośnie zapotrzebowanie algorytmu wraz ze wzrostem rozmiaru zadania.\\
$N$ -- rozmiar zadania algortymicznego.\\
$f(N)$ -- funkcja złożoności obliczeniowej.
** Typowe funkcjie złożoności obliczeniowej
*** Funkcja Stała
$F(N) = A, A  =const$ \\
$O(1)$
**** $O(1)$
$$O(1) = O(1) + O(1) + \dots + O(1)$$
$$O(1) = A+ O(1)$$
*** Funkcja liniowa
$$F(N) = A \cdot N + B, A,B = const$$
$\alpha = \text{tg } A$
**** O(N)
$$O(N) = A \cdot O(N)$$
$$O(N) = O(N) + O(N) + \dots + O(N)$$
$$O(N) = O(1) \cdot O(N)$$
$$O(N) = N \cdot O(1)$$
*** Funkcja kwadratowa
$F(N)=A \cdot N^2 + B \cdot N + C$
**** $O(N^2)$
$$O(N^2) = A \cdot O(N^{2})$$
$$O(N^2) = O(N^{2}) + O(N^{2}) + \dots + O(N^{2})$$
$$O(N^2) = O(N^{2}) + O(N)$$
$$O(N^2) = O(N^{2}) + O(1)$$
$$O(N^2) = N \cdot O(N)$$
$$O(N^2) = O(1) \cdot O(N^2)$$
$$O(N^2) = O(N) \cdot O(N)$$
*** Funkcja wielomianowa
$$F(N) = A \cdot N^{B} + \cdots + X, A,B,\cdots,X = const $$
*** Funkcja wykłatnicza
$$F(N) = A^{N} + B^{B_{1}} + \dots + X}$$
*** Funkcja silnia wykładnicza
$f(N) = N!$
* $P, NP$
Zadania klasy $P$, są to zadania które są rozwiązywalne przez algorytm w czasie wielominaowym, przez deterministyczną maszynę Turinga.
